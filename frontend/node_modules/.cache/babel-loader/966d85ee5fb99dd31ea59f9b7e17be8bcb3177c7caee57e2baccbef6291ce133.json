{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5340\\\\OneDrive\\\\Desktop\\\\vinteddd\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { loginUser } from '../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [refreshToken, setRefreshToken] = useState(null);\n  useEffect(() => {\n    // Load tokens and user from localStorage on mount\n    const storedAccessToken = localStorage.getItem('accessToken');\n    const storedRefreshToken = localStorage.getItem('refreshToken');\n    const storedUser = localStorage.getItem('user');\n    if (storedAccessToken && storedRefreshToken && storedUser) {\n      setAccessToken(storedAccessToken);\n      setRefreshToken(storedRefreshToken);\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await loginUser(credentials);\n      if (response && response.data) {\n        const {\n          access,\n          refresh\n        } = response.data;\n        localStorage.setItem('accessToken', access);\n        localStorage.setItem('refreshToken', refresh);\n        localStorage.setItem('user', JSON.stringify(credentials.username));\n        setAccessToken(access);\n        setRefreshToken(refresh);\n        setUser(credentials.username);\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      let errorMessage = 'Une erreur est survenue lors de la connexion.';\n      if (error.response) {\n        if (error.response.status === 401) {\n          errorMessage = 'Email ou mot de passe incorrect.';\n        } else if (error.response.status === 400) {\n          var _error$response$data;\n          errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Données de connexion invalides.';\n        } else if (error.response.status >= 500) {\n          errorMessage = 'Erreur serveur. Veuillez réessayer plus tard.';\n        }\n      } else if (error.request) {\n        errorMessage = 'Impossible de se connecter au serveur. Vérifiez votre connexion.';\n      }\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setAccessToken(null);\n    setRefreshToken(null);\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      accessToken,\n      refreshToken,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PWst9FOQl6GO3CAMZ8dFUTBbUQk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","loginUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","accessToken","setAccessToken","refreshToken","setRefreshToken","storedAccessToken","localStorage","getItem","storedRefreshToken","storedUser","JSON","parse","login","credentials","response","data","access","refresh","setItem","stringify","username","success","error","console","errorMessage","status","_error$response$data","detail","request","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/5340/OneDrive/Desktop/vinteddd/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { loginUser } from '../services/userService';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [refreshToken, setRefreshToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Load tokens and user from localStorage on mount\r\n    const storedAccessToken = localStorage.getItem('accessToken');\r\n    const storedRefreshToken = localStorage.getItem('refreshToken');\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedAccessToken && storedRefreshToken && storedUser) {\r\n      setAccessToken(storedAccessToken);\r\n      setRefreshToken(storedRefreshToken);\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await loginUser(credentials);\r\n      if (response && response.data) {\r\n        const { access, refresh } = response.data;\r\n        localStorage.setItem('accessToken', access);\r\n        localStorage.setItem('refreshToken', refresh);\r\n        localStorage.setItem('user', JSON.stringify(credentials.username));\r\n        setAccessToken(access);\r\n        setRefreshToken(refresh);\r\n        setUser(credentials.username);\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      let errorMessage = 'Une erreur est survenue lors de la connexion.';\r\n      \r\n      if (error.response) {\r\n        if (error.response.status === 401) {\r\n          errorMessage = 'Email ou mot de passe incorrect.';\r\n        } else if (error.response.status === 400) {\r\n          errorMessage = error.response.data?.detail || 'Données de connexion invalides.';\r\n        } else if (error.response.status >= 500) {\r\n          errorMessage = 'Erreur serveur. Veuillez réessayer plus tard.';\r\n        }\r\n      } else if (error.request) {\r\n        errorMessage = 'Impossible de se connecter au serveur. Vérifiez votre connexion.';\r\n      }\r\n      \r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, accessToken, refreshToken, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}